generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model directors {
  movie_id  Int
  person_id Int
  movies    movies @relation(fields: [movie_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  people    people @relation(fields: [person_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  @@id([movie_id, person_id])
}

model movies {
  id        Int         @id
  title     String
  description String    @default("")
  year      Decimal?    @db.Decimal
  directors directors[]
  ratings   ratings[]
  stars     stars[]
}

model people {
  id        Int         @id
  name      String
  birth     Decimal?    @db.Decimal
  directors directors[] 
  stars     stars[]     
}

model ratings {
  movie_id Int @id
  rating   Float  @db.Real
  votes    Int
  movies   movies @relation(fields: [movie_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model stars {
  movie_id  Int
  person_id Int
  movies    movies @relation(fields: [movie_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  people    people @relation(fields: [person_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
  @@id([movie_id, person_id])
}

model toplists {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(50)
  moviesJson String
  authorId  Int
  author    users  @relation(fields: [authorId], references: [id])
}

model users {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(50)
  email String @db.VarChar(50)
  saltedPassword String
  passwordSalt String
  toplists toplists[]
  preferencesJson String
}
